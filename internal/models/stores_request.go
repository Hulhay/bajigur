// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StoresRequest stores request
//
// swagger:model StoresRequest
type StoresRequest struct {

	// owner
	// Example: owner dummy
	// Required: true
	Owner *string `json:"owner" gorm:"type:varchar(255)"`

	// store address
	// Example: Banjaran, Kabupaten Bandung
	StoreAddress string `json:"store_address,omitempty" gorm:"type:varchar(255)"`

	// store name
	// Example: warung dummy
	// Required: true
	StoreName *string `json:"store_name" gorm:"type:varchar(255)"`

	// store phone
	// Example: +6288220138765
	// Required: true
	// Max Length: 15
	// Pattern: \+62\d*
	StorePhone *string `json:"store_phone" gorm:"type:varchar(15)"`

	// store photo
	// Example: sp1.jpg
	StorePhoto string `json:"store_photo,omitempty" gorm:"type:varchar(255);default:sp0.jpg"`
}

// Validate validates this stores request
func (m *StoresRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOwner(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStoreName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStorePhone(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StoresRequest) validateOwner(formats strfmt.Registry) error {

	if err := validate.Required("owner", "body", m.Owner); err != nil {
		return err
	}

	return nil
}

func (m *StoresRequest) validateStoreName(formats strfmt.Registry) error {

	if err := validate.Required("store_name", "body", m.StoreName); err != nil {
		return err
	}

	return nil
}

func (m *StoresRequest) validateStorePhone(formats strfmt.Registry) error {

	if err := validate.Required("store_phone", "body", m.StorePhone); err != nil {
		return err
	}

	if err := validate.MaxLength("store_phone", "body", *m.StorePhone, 15); err != nil {
		return err
	}

	if err := validate.Pattern("store_phone", "body", *m.StorePhone, `\+62\d*`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this stores request based on context it is used
func (m *StoresRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StoresRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StoresRequest) UnmarshalBinary(b []byte) error {
	var res StoresRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
